    void dfs(int vis[],vector<int>&v, vector<int> adj[],int node)
    {
        vis[node]=1;
        v.push_back(node);
         for(auto it:adj[node])
         {
             if(!vis[it])
             {
                 dfs(vis,v,adj,it);
             }
         }
    }
  public:
    // Function to return a list containing the DFS traversal of the graph.
    vector<int> dfsOfGraph(int V, vector<int> adj[]) {
        int vis[V]={0};
        
        vector<int>v;
       dfs(vis,v,adj,0);
        return v;
            }
};
